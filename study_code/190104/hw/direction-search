package com.ssafy.algo;

import java.io.FileInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Solution21소금쟁이중첩 {
	static long Answer;
	static int N, S;
	
    	//0,    하(1), 우(2)
	static int[][] dir = {{0,0}, {1,0},{0,1}};
	static int[] jump = {3, 2, 1};
	public static void main(String[] args) throws Exception {
		System.setIn(new FileInputStream("Solution21소금쟁이중첩.txt"));
		Scanner sc=new Scanner(System.in);
		int T=sc.nextInt();//테스트 케이스 수

		firstLoop:for(int test_case=1; test_case<=T; test_case++){
			N=sc.nextInt(); //배열의 크기 NxN
			int[][] lake=new int[N][N];

			S=sc.nextInt();//소금쟁이(Strider)수
			int[][] strider=new int[S][3];
			for(int k=0; k<S; k++){
				strider[k][0]=sc.nextInt();//행위치
				strider[k][1]=sc.nextInt();//열위치
				strider[k][2]=sc.nextInt();//방향(1:하,2:우)
			}
			//////////////////////////////
			//( 이 부분에 알고리즘 구현을 한다. )//
			//////////////////////////////
			//Answer = 0;
//			for(int[] a:lake) System.out.println(Arrays.toString(a));
			loop:for(int s = 0; s<S; s++) {
				int i = strider[s][0];
				int j = strider[s][1];
				if(lake[i][j] == 1) {
					System.out.println("#"+test_case+" "+s+1);
					continue firstLoop;
					//continue loop;
				}
				int d = strider[s][2];
				
				int ii = i;
				int jj = j;
				for(int k = 0; k<jump.length; k++) {
					ii = ii+dir[d][0]*jump[k];
					jj = jj+dir[d][1]*jump[k];
					if( 0>ii || ii>=N || 0>jj || jj>=N) {
//						lake[ii][jj] = 1;
						continue loop;
					}
					if(lake[ii][jj] == 1) {
						System.out.println("#"+test_case+" "+(s+1));
						continue firstLoop;
						//continue loop;
					}
					lake[ii][jj] = 1;
				}
				
				//Answer++;
			}
//			for(int[] a:lake) System.out.println(Arrays.toString(a));
			System.out.println("#"+test_case+" "+0);
			//System.out.println("#"+test_case+" "+Answer);
		}
		sc.close();
	}
}
